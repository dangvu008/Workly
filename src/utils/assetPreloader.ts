/**
 * ‚úÖ Asset Preloader Utility
 * T·ªëi ∆∞u h√≥a vi·ªác preload assets ƒë·ªÉ c·∫£i thi·ªán performance
 */

import * as Font from 'expo-font';
import { Asset } from 'expo-asset';

// ‚úÖ Preload critical fonts only
const preloadFonts = async () => {
  try {
    // Ch·ªâ preload fonts th·ª±c s·ª± c·∫ßn thi·∫øt
    // React Native Paper s·ª≠ d·ª•ng system fonts n√™n kh√¥ng c·∫ßn preload nhi·ªÅu
    await Font.loadAsync({
      // Ch·ªâ load fonts custom n·∫øu c√≥
    });
    console.log('‚úÖ Fonts preloaded successfully');
  } catch (error) {
    console.warn('‚ö†Ô∏è Font preloading failed:', error);
  }
};

// ‚úÖ Preload critical images only
const preloadImages = async () => {
  try {
    const imageAssets = [
      // Ch·ªâ preload nh·ªØng h√¨nh ·∫£nh quan tr·ªçng nh·∫•t
      require('../../assets/icon.png'),
      require('../../assets/adaptive-icon.png'),
    ];

    const cacheImages = imageAssets.map(image => {
      return Asset.fromModule(image).downloadAsync();
    });

    await Promise.all(cacheImages);
    console.log('‚úÖ Critical images preloaded successfully');
  } catch (error) {
    console.warn('‚ö†Ô∏è Image preloading failed:', error);
  }
};

// ‚úÖ Main preloader function - ch·ªâ preload nh·ªØng g√¨ th·ª±c s·ª± c·∫ßn thi·∫øt
export const preloadCriticalAssets = async () => {
  try {
    console.log('üöÄ Starting critical asset preloading...');
    
    // Preload song song ƒë·ªÉ ti·∫øt ki·ªám th·ªùi gian
    await Promise.allSettled([
      preloadFonts(),
      preloadImages(),
    ]);
    
    console.log('‚úÖ Critical asset preloading completed');
  } catch (error) {
    console.warn('‚ö†Ô∏è Asset preloading failed:', error);
    // Kh√¥ng throw error ƒë·ªÉ kh√¥ng block app startup
  }
};

// ‚úÖ Lazy preload non-critical assets trong background
export const preloadNonCriticalAssets = () => {
  // Ch·∫°y trong background sau khi app ƒë√£ load xong
  setTimeout(async () => {
    try {
      console.log('üîÑ Starting non-critical asset preloading...');
      
      // Preload c√°c assets kh√¥ng quan tr·ªçng
      // V√≠ d·ª•: weather icons, animation assets, etc.
      
      console.log('‚úÖ Non-critical asset preloading completed');
    } catch (error) {
      console.warn('‚ö†Ô∏è Non-critical asset preloading failed:', error);
    }
  }, 2000); // Delay 2 gi√¢y sau khi app load xong
};
